cmake_minimum_required(VERSION 3.8)
set_property(GLOBAL PROPERTY ALLOW_DUPLICATE_CUSTOM_TARGETS True)

include(GNUInstallDirs)

set(STANDARD_DIR_PERM OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
set(STANDARD_EXE_PERM OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
set(STANDARD_DOC_PERM OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
set(STANDARD_CONF_PERM OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)

set(SCRIPT_DIR ${CMAKE_CURRENT_LIST_DIR}/../scripts)
set(MACRO_DIR ${CMAKE_CURRENT_LIST_DIR})

macro(piradio_project deb_name component)
  project(${component})

  set(DEB_NAME ${deb_name})

  set(CURRENT_META "${DEB_NAME}-meta")
  set(CURRENT_COMPONENT "${component}")
  
  set(COMPONENT_${component}_DIR ${CMAKE_CURRENT_SOURCE_DIR} PARENT_SCOPE)
  set(COMPONENT_${component}_DEB_NAME ${DEB_NAME} PARENT_SCOPE)

  message(STATUS "Current meta project: ${CURRENT_META}")
  
  add_custom_target(${CURRENT_META} ALL)
 
  install(DIRECTORY DESTINATION usr/ COMPONENT ${component} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  install(DIRECTORY DESTINATION usr/bin/ COMPONENT ${component} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  install(DIRECTORY DESTINATION usr/share/ COMPONENT ${component} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  install(DIRECTORY DESTINATION usr/share/man/ COMPONENT ${component} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  install(DIRECTORY DESTINATION usr/share/man/man1/ COMPONENT ${component} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  install(DIRECTORY DESTINATION usr/share/doc/ COMPONENT ${component} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  install(DIRECTORY DESTINATION usr/share/doc/${DEB_NAME}/ COMPONENT ${component} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  
  install(DIRECTORY DESTINATION etc/ COMPONENT ${component} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  install(DIRECTORY DESTINATION etc/piradio COMPONENT ${component})
  install(DIRECTORY DESTINATION etc/piradio/firmware COMPONENT ${component})
  install(DIRECTORY DESTINATION etc/modules-load.d COMPONENT ${component} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  
  install(DIRECTORY DESTINATION lib/ COMPONENT ${component} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  install(DIRECTORY DESTINATION lib/udev/ COMPONENT ${component} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  install(DIRECTORY DESTINATION lib/udev/rules.d COMPONENT ${component} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
endmacro()

macro(piradio_install_dbus dbus_id)
  install(DIRECTORY DESTINATION etc/dbus-1 COMPONENT ${CURRENT_COMPONENT} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  install(DIRECTORY DESTINATION etc/dbus-1/system.d COMPONENT ${CURRENT_COMPONENT} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  install(FILES conf/${dbus_id}.conf DESTINATION etc/dbus-1/system.d/ COMPONENT ${CURRENT_COMPONENT} PERMISSIONS ${STANDARD_CONF_PERM})

  install(DIRECTORY DESTINATION lib/systemd COMPONENT ${CURRENT_COMPONENT} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  install(DIRECTORY DESTINATION lib/systemd/system COMPONENT ${CURRENT_COMPONENT} DIRECTORY_PERMISSIONS ${STARNDARD_DIR_PERM})
  install(FILES conf/${dbus_id}.service DESTINATION lib/systemd/system COMPONENT ${CURRENT_COMPONENT} PERMISSIONS ${STANDARD_CONF_PERM})
endmacro()

macro(piradio_service_deb component description)
  message(STATUS "Test: ${component} ${COMPONENT_${component}_DEB_NAME} ")
  set(deb_name ${COMPONENT_${component}_DEB_NAME})
  set(deb_dir ${COMPONENT_${component}_DIR}/deb)
  message(STATUS "Adding service .deb: ${deb_name} ${deb_dir}")
  set(CPACK_DEBIAN_${component}_DESCRIPTION "${description}")
  set(CPACK_DEBIAN_${component}_PACKAGE_DEPENDS "piradio-base")
  set(CPACK_DEBIAN_${component}_PACKAGE_CONTROL_EXTRA "${deb_dir}/conffiles;${deb_dir}/postinst")
  set(CPACK_DEBIAN_${component}_DEBUGINFO_PACKAGE ON)
  set(CPACK_DEBIAN_${component}_PACKAGE_SHLIBDEPS ON)
  
endmacro()
