#!/usr/bin/env python3

import os
import click
import runpy
from pathlib import Path

from click_man.core import write_man_pages
from distutils.version import LooseVersion

def write_man_pages(name, cli, parent_ctx=None, version=None, target_dir=None):
    """
    Generate man page files recursively
    for the given click cli function.

    :param str name: the cli name
    :param cli: the cli instance
    :param click.Context parent_ctx: the parent click context
    :param str target_dir: the directory where the generated
                           man pages are stored.
    """
    ctx = click.Context(cli, info_name=name, parent=parent_ctx)

    #man_page = generate_man_page(ctx, version)
    path = '{0}.1'.format(ctx.command_path.replace(' ', '-'))
    print(path)

    commands = getattr(cli, 'commands', {})
    for name, command in commands.items():
        if LooseVersion(click.__version__) >= LooseVersion("7.0"):
            # Since Click 7.0, we have been able to mark commands as hidden
            if command.hidden:
                # Do not write a man page for a hidden command
                continue
        write_man_pages(name, command, parent_ctx=ctx, version=version, target_dir=target_dir)

@click.command()
@click.argument("path")
def cli(path):    
    from importlib import import_module
    from inspect import getmembers

    m = runpy.run_path(path)

    commands = [ (k, v) for k, v in m.items() if isinstance(v, click.Command) ]

    name, obj = commands[0]

    write_man_pages(Path(path).name, obj)
    

if __name__ == '__main__':
    cli()
