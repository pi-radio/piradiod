#include <piradio/lmx2820_config.hpp>
#include <iostream>
namespace piradio
{
  void LMX2820Config::fill_regs(std::map<int, uint16_t> &reg_vals)
  {
    reg_vals[0] = 0x4020 | (powerdown & 0x3) | ((reset & 0x3) << 1) | ((fcal_en & 0x3) << 4) | ((dblr_cal_en & 0x3) << 6) | ((fcal_lpfd_adj & 0x7) << 7) | ((fcal_hpfd_adj & 0x7) << 9) | ((instcal_skip_acal & 0x3) << 13);
    reg_vals[1] = 0x5780 | (instcal_en & 0x3) | ((instcal_dblr_en & 0x3) << 1) | ((ld_vtune_en & 0x3) << 5) | ((phase_sync_en & 0x3) << 15);
    reg_vals[2] = 0x8000 | (quick_recal_en & 0x3) | ((instcal_dly & 0xfff) << 1) | ((cal_clk_div & 0xf) << 12);
    reg_vals[6] = 0x0043 | ((acal_cmp_dly & 0x1ff) << 8);
    reg_vals[10] = 0x0000 | ((vco_capctrl_force & 0x3) << 7) | ((vco_daciset_force & 0x3) << 11) | ((pfd_dly_manual & 0x3) << 12);
    reg_vals[11] = 0x0602 | ((osc_2x & 0x3) << 4);
    reg_vals[12] = 0x0008 | ((mult & 0xf) << 10);
    reg_vals[13] = 0x0018 | ((pll_r & 0x1ff) << 5);
    reg_vals[14] = 0x3000 | (pll_r_pre & 0x1fff);
    reg_vals[15] = 0x2001 | ((pfd_single & 0x7) << 9) | ((pfd_pol & 0x3) << 11);
    reg_vals[16] = 0x1700 | ((cpg & 0x1f) << 1);
    reg_vals[17] = 0x1580 | ((ld_type & 0x3) << 6);
    reg_vals[18] = 0x0000 | (ld_dly & 0x1ffff);
    reg_vals[19] = 0x2120 | ((tempsense_en & 0x7) << 3);
    reg_vals[20] = 0x2600 | (vco_daciset & 0x3ff);
    reg_vals[22] = 0x0200 | (vco_capctrl & 0x1ff) | ((vco_sel & 0xf) << 13);
    reg_vals[23] = 0x1102 | (vco_sel_force & 0x3);
    reg_vals[32] = 0x1001 | ((chdiva & 0xf) << 6) | ((chdivb & 0xf) << 9);
    reg_vals[34] = 0x0000 | (extvco_en & 0x3) | ((extvco_div & 0x3) << 4) | ((loopback_en & 0x3) << 11);
    reg_vals[35] = 0x2000 | ((mashseed_en & 0x3) << 6) | ((mash_order & 0x7) << 7) | ((mash_reset_n & 0x3) << 12);
    reg_vals[36] = 0x0000 | (pll_n & 0xffff);
    reg_vals[37] = 0x0100 | ((pfd_dly & 0x7f) << 9);
    reg_vals[38] = 0x0000 | ((pll_den >> 16) & 0x3);
    reg_vals[39] = 0x0000 | (pll_den & 0x1ffff);
    reg_vals[40] = 0x0000 | ((mash_seed >> 16) & 0x3);
    reg_vals[41] = 0x0000 | (mash_seed & 0x1ffff);
    reg_vals[42] = 0x0000 | ((pll_num >> 16) & 0x3);
    reg_vals[43] = 0x0000 | (pll_num & 0x1ffff);
    reg_vals[44] = 0x0000 | ((instcal_pll_num >> 16) & 0x3);
    reg_vals[45] = 0x0000 | (instcal_pll_num & 0x1ffff);
    reg_vals[56] = 0x0000 | (extpfd_div & 0x7f);
    reg_vals[57] = 0x0000 | (pfd_sel & 0x3);
    reg_vals[62] = 0x0000 | ((mash_rst_count >> 16) & 0x3);
    reg_vals[63] = 0x0000 | (mash_rst_count & 0x1ffff);
    reg_vals[64] = 0x0000 | ((sysref_repeat & 0x3) << 1) | ((sysref_en & 0x3) << 2) | ((sysref_pulse & 0x3) << 3) | ((sysref_repeat_ns & 0x3) << 4) | ((sysref_div_pre & 0xf) << 5) | ((sysref_inp_fmt & 0x7) << 8);
    reg_vals[65] = 0x0000 | (sysref_div & 0xfff);
    reg_vals[66] = 0x0000 | (jesd_dac1_ctrl & 0x7f) | ((jesd_dac2_ctrl & 0x7f) << 6);
    reg_vals[67] = 0x0000 | (jesd_dac3_ctrl & 0x7f) | ((jesd_dac4_ctrl & 0x7f) << 6) | ((sysref_pulse_cnt & 0x1f) << 12);
    reg_vals[68] = 0x0000 | (psync_inp_fmt & 0x3) | ((inpin_ignore & 0x3) << 5);
    reg_vals[69] = 0x0001 | ((srout_pd & 0x3) << 4);
    reg_vals[70] = 0x000e | ((dblbuf_pll_en & 0x3) << 4) | ((dblbuf_chdiv_en & 0x3) << 5) | ((dblbuf_outbuf_en & 0x3) << 6) | ((dblbuf_outmux_en & 0x3) << 7);
    reg_vals[74] = 0x0000 | ((rb_vco_sel & 0xf) << 2) | ((rb_vco_capctrl & 0x1ff) << 5) | ((rb_ld & 0x7) << 14);
    reg_vals[75] = 0x0000 | (rb_vco_daciset & 0x3ff);
    reg_vals[76] = 0x0000 | (rb_temp_sens & 0xfff);
    reg_vals[77] = 0x0608 | ((pinmute_pol & 0x3) << 8);
    reg_vals[78] = 0x0000 | (outa_mux & 0x7) | ((outa_pd & 0x3) << 4);
    reg_vals[79] = 0x0000 | ((outa_pwr & 0xf) << 1) | ((outb_mux & 0x7) << 4) | ((outb_pd & 0x3) << 8);
    reg_vals[80] = 0x0000 | ((outb_pwr & 0xf) << 6);
  }
  void LMX2820Config::read_regs(const std::map<int, std::uint16_t> &reg_vals)
  {
    powerdown = reg_vals.at(0) & 0x3;
    reset = (reg_vals.at(0) >> 1) & 0x3;
    fcal_en = (reg_vals.at(0) >> 4) & 0x3;
    dblr_cal_en = (reg_vals.at(0) >> 6) & 0x3;
    fcal_lpfd_adj = (reg_vals.at(0) >> 7) & 0x7;
    fcal_hpfd_adj = (reg_vals.at(0) >> 9) & 0x7;
    instcal_skip_acal = (reg_vals.at(0) >> 13) & 0x3;
    instcal_en = reg_vals.at(1) & 0x3;
    instcal_dblr_en = (reg_vals.at(1) >> 1) & 0x3;
    ld_vtune_en = (reg_vals.at(1) >> 5) & 0x3;
    phase_sync_en = (reg_vals.at(1) >> 15) & 0x3;
    quick_recal_en = reg_vals.at(2) & 0x3;
    instcal_dly = (reg_vals.at(2) >> 1) & 0xfff;
    cal_clk_div = (reg_vals.at(2) >> 12) & 0xf;
    acal_cmp_dly = (reg_vals.at(6) >> 8) & 0x1ff;
    vco_capctrl_force = (reg_vals.at(10) >> 7) & 0x3;
    vco_daciset_force = (reg_vals.at(10) >> 11) & 0x3;
    pfd_dly_manual = (reg_vals.at(10) >> 12) & 0x3;
    osc_2x = (reg_vals.at(11) >> 4) & 0x3;
    mult = (reg_vals.at(12) >> 10) & 0xf;
    pll_r = (reg_vals.at(13) >> 5) & 0x1ff;
    pll_r_pre = reg_vals.at(14) & 0x1fff;
    pfd_single = (reg_vals.at(15) >> 9) & 0x7;
    pfd_pol = (reg_vals.at(15) >> 11) & 0x3;
    cpg = (reg_vals.at(16) >> 1) & 0x1f;
    ld_type = (reg_vals.at(17) >> 6) & 0x3;
    ld_dly = reg_vals.at(18) & 0x1ffff;
    tempsense_en = (reg_vals.at(19) >> 3) & 0x7;
    vco_daciset = reg_vals.at(20) & 0x3ff;
    vco_capctrl = reg_vals.at(22) & 0x1ff;
    vco_sel = (reg_vals.at(22) >> 13) & 0xf;
    vco_sel_force = reg_vals.at(23) & 0x3;
    chdiva = (reg_vals.at(32) >> 6) & 0xf;
    chdivb = (reg_vals.at(32) >> 9) & 0xf;
    extvco_en = reg_vals.at(34) & 0x3;
    extvco_div = (reg_vals.at(34) >> 4) & 0x3;
    loopback_en = (reg_vals.at(34) >> 11) & 0x3;
    mashseed_en = (reg_vals.at(35) >> 6) & 0x3;
    mash_order = (reg_vals.at(35) >> 7) & 0x7;
    mash_reset_n = (reg_vals.at(35) >> 12) & 0x3;
    pll_n = reg_vals.at(36) & 0xffff;
    pfd_dly = (reg_vals.at(37) >> 9) & 0x7f;
    pll_den = ((uint32_t)reg_vals.at(37) << 16) & 0xffff;
    pll_den = reg_vals.at(39) & 0x1ffff;
    mash_seed = ((uint32_t)reg_vals.at(39) << 16) & 0xffff;
    mash_seed = reg_vals.at(41) & 0x1ffff;
    pll_num = ((uint32_t)reg_vals.at(41) << 16) & 0xffff;
    pll_num = reg_vals.at(43) & 0x1ffff;
    instcal_pll_num = ((uint32_t)reg_vals.at(43) << 16) & 0xffff;
    instcal_pll_num = reg_vals.at(45) & 0x1ffff;
    extpfd_div = reg_vals.at(56) & 0x7f;
    pfd_sel = reg_vals.at(57) & 0x3;
    mash_rst_count = ((uint32_t)reg_vals.at(57) << 16) & 0xffff;
    mash_rst_count = reg_vals.at(63) & 0x1ffff;
    sysref_repeat = (reg_vals.at(64) >> 1) & 0x3;
    sysref_en = (reg_vals.at(64) >> 2) & 0x3;
    sysref_pulse = (reg_vals.at(64) >> 3) & 0x3;
    sysref_repeat_ns = (reg_vals.at(64) >> 4) & 0x3;
    sysref_div_pre = (reg_vals.at(64) >> 5) & 0xf;
    sysref_inp_fmt = (reg_vals.at(64) >> 8) & 0x7;
    sysref_div = reg_vals.at(65) & 0xfff;
    jesd_dac1_ctrl = reg_vals.at(66) & 0x7f;
    jesd_dac2_ctrl = (reg_vals.at(66) >> 6) & 0x7f;
    jesd_dac3_ctrl = reg_vals.at(67) & 0x7f;
    jesd_dac4_ctrl = (reg_vals.at(67) >> 6) & 0x7f;
    sysref_pulse_cnt = (reg_vals.at(67) >> 12) & 0x1f;
    psync_inp_fmt = reg_vals.at(68) & 0x3;
    inpin_ignore = (reg_vals.at(68) >> 5) & 0x3;
    srout_pd = (reg_vals.at(69) >> 4) & 0x3;
    dblbuf_pll_en = (reg_vals.at(70) >> 4) & 0x3;
    dblbuf_chdiv_en = (reg_vals.at(70) >> 5) & 0x3;
    dblbuf_outbuf_en = (reg_vals.at(70) >> 6) & 0x3;
    dblbuf_outmux_en = (reg_vals.at(70) >> 7) & 0x3;
    rb_vco_sel = (reg_vals.at(74) >> 2) & 0xf;
    rb_vco_capctrl = (reg_vals.at(74) >> 5) & 0x1ff;
    rb_ld = (reg_vals.at(74) >> 14) & 0x7;
    rb_vco_daciset = reg_vals.at(75) & 0x3ff;
    rb_temp_sens = reg_vals.at(76) & 0xfff;
    pinmute_pol = (reg_vals.at(77) >> 8) & 0x3;
    outa_mux = reg_vals.at(78) & 0x7;
    outa_pd = (reg_vals.at(78) >> 4) & 0x3;
    outa_pwr = (reg_vals.at(79) >> 1) & 0xf;
    outb_mux = (reg_vals.at(79) >> 4) & 0x7;
    outb_pd = (reg_vals.at(79) >> 8) & 0x3;
    outb_pwr = (reg_vals.at(80) >> 6) & 0xf;
  }

  void LMX2820Config::dump(void)
  {
    std::cout << "powerdown: " << powerdown << std::endl;
    std::cout << "reset: " << reset << std::endl;
    std::cout << "fcal_en: " << fcal_en << std::endl;
    std::cout << "dblr_cal_en: " << dblr_cal_en << std::endl;
    std::cout << "fcal_lpfd_adj: " << fcal_lpfd_adj << std::endl;
    std::cout << "fcal_hpfd_adj: " << fcal_hpfd_adj << std::endl;
    std::cout << "instcal_skip_acal: " << instcal_skip_acal << std::endl;
    std::cout << "instcal_en: " << instcal_en << std::endl;
    std::cout << "instcal_dblr_en: " << instcal_dblr_en << std::endl;
    std::cout << "ld_vtune_en: " << ld_vtune_en << std::endl;
    std::cout << "phase_sync_en: " << phase_sync_en << std::endl;
    std::cout << "quick_recal_en: " << quick_recal_en << std::endl;
    std::cout << "instcal_dly: " << instcal_dly << std::endl;
    std::cout << "cal_clk_div: " << cal_clk_div << std::endl;
    std::cout << "acal_cmp_dly: " << acal_cmp_dly << std::endl;
    std::cout << "vco_capctrl_force: " << vco_capctrl_force << std::endl;
    std::cout << "vco_daciset_force: " << vco_daciset_force << std::endl;
    std::cout << "pfd_dly_manual: " << pfd_dly_manual << std::endl;
    std::cout << "osc_2x: " << osc_2x << std::endl;
    std::cout << "mult: " << mult << std::endl;
    std::cout << "pll_r: " << pll_r << std::endl;
    std::cout << "pll_r_pre: " << pll_r_pre << std::endl;
    std::cout << "pfd_single: " << pfd_single << std::endl;
    std::cout << "pfd_pol: " << pfd_pol << std::endl;
    std::cout << "cpg: " << cpg << std::endl;
    std::cout << "ld_type: " << ld_type << std::endl;
    std::cout << "ld_dly: " << ld_dly << std::endl;
    std::cout << "tempsense_en: " << tempsense_en << std::endl;
    std::cout << "vco_daciset: " << vco_daciset << std::endl;
    std::cout << "vco_capctrl: " << vco_capctrl << std::endl;
    std::cout << "vco_sel: " << vco_sel << std::endl;
    std::cout << "vco_sel_force: " << vco_sel_force << std::endl;
    std::cout << "chdiva: " << chdiva << std::endl;
    std::cout << "chdivb: " << chdivb << std::endl;
    std::cout << "extvco_en: " << extvco_en << std::endl;
    std::cout << "extvco_div: " << extvco_div << std::endl;
    std::cout << "loopback_en: " << loopback_en << std::endl;
    std::cout << "mashseed_en: " << mashseed_en << std::endl;
    std::cout << "mash_order: " << mash_order << std::endl;
    std::cout << "mash_reset_n: " << mash_reset_n << std::endl;
    std::cout << "pll_n: " << pll_n << std::endl;
    std::cout << "pfd_dly: " << pfd_dly << std::endl;
    std::cout << "pll_den: " << pll_den << std::endl;
    std::cout << "mash_seed: " << mash_seed << std::endl;
    std::cout << "pll_num: " << pll_num << std::endl;
    std::cout << "instcal_pll_num: " << instcal_pll_num << std::endl;
    std::cout << "extpfd_div: " << extpfd_div << std::endl;
    std::cout << "pfd_sel: " << pfd_sel << std::endl;
    std::cout << "mash_rst_count: " << mash_rst_count << std::endl;
    std::cout << "sysref_repeat: " << sysref_repeat << std::endl;
    std::cout << "sysref_en: " << sysref_en << std::endl;
    std::cout << "sysref_pulse: " << sysref_pulse << std::endl;
    std::cout << "sysref_repeat_ns: " << sysref_repeat_ns << std::endl;
    std::cout << "sysref_div_pre: " << sysref_div_pre << std::endl;
    std::cout << "sysref_inp_fmt: " << sysref_inp_fmt << std::endl;
    std::cout << "sysref_div: " << sysref_div << std::endl;
    std::cout << "jesd_dac1_ctrl: " << jesd_dac1_ctrl << std::endl;
    std::cout << "jesd_dac2_ctrl: " << jesd_dac2_ctrl << std::endl;
    std::cout << "jesd_dac3_ctrl: " << jesd_dac3_ctrl << std::endl;
    std::cout << "jesd_dac4_ctrl: " << jesd_dac4_ctrl << std::endl;
    std::cout << "sysref_pulse_cnt: " << sysref_pulse_cnt << std::endl;
    std::cout << "psync_inp_fmt: " << psync_inp_fmt << std::endl;
    std::cout << "inpin_ignore: " << inpin_ignore << std::endl;
    std::cout << "srout_pd: " << srout_pd << std::endl;
    std::cout << "dblbuf_pll_en: " << dblbuf_pll_en << std::endl;
    std::cout << "dblbuf_chdiv_en: " << dblbuf_chdiv_en << std::endl;
    std::cout << "dblbuf_outbuf_en: " << dblbuf_outbuf_en << std::endl;
    std::cout << "dblbuf_outmux_en: " << dblbuf_outmux_en << std::endl;
    std::cout << "rb_vco_sel: " << rb_vco_sel << std::endl;
    std::cout << "rb_vco_capctrl: " << rb_vco_capctrl << std::endl;
    std::cout << "rb_ld: " << rb_ld << std::endl;
    std::cout << "rb_vco_daciset: " << rb_vco_daciset << std::endl;
    std::cout << "rb_temp_sens: " << rb_temp_sens << std::endl;
    std::cout << "pinmute_pol: " << pinmute_pol << std::endl;
    std::cout << "outa_mux: " << outa_mux << std::endl;
    std::cout << "outa_pd: " << outa_pd << std::endl;
    std::cout << "outa_pwr: " << outa_pwr << std::endl;
    std::cout << "outb_mux: " << outb_mux << std::endl;
    std::cout << "outb_pd: " << outb_pd << std::endl;
    std::cout << "outb_pwr: " << outb_pwr << std::endl;
  }
}
